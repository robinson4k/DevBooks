version: '3.9'
services:
  #PHP Service
  app:
    build:
      context: ./docker/8.2
      dockerfile: Dockerfile
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      - nginx
      - mysql
    networks:
      - app-network

  #Nginx Service
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    container_name: nginx
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./docker/nginx/logs:/var/log/nginx
      - /etc/letsencrypt:/etc/letsencrypt
    networks:
      - app-network

  #MySQL Service
  mysql:
    image: mariadb:latest
    restart: unless-stopped
    container_name: mysql
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    ports:
      - "8080:80"
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql
      - PMA_USER=${DB_USERNAME}
      - PMA_PASSWORD=${DB_PASSWORD}
    restart: always
    depends_on:
      - mysql
    networks:
      - app-network

  composer:
    container_name: composer
    build:
        context: ./docker/composer
        dockerfile: Dockerfile
    volumes:
        - "./:/app"
    command: install --ignore-platform-reqs --no-scripts

#Docker Networks
networks:
  app-network:
    driver: bridge
